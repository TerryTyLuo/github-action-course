name: S8 Jobs in Docker Container
on:
  push:
    branches:
      - main
      - dev
env:
  CACHE_KEY: node-deps
  MONGODB_DB_NAME: gha-demo
jobs:
  test:
    environment: testing
    runs-on: ubuntu-latest
    # put the job execution into a container
    # specify an image name here.
    # could upload custom images to Docker, or use the officials
#    container:
#      image: node:16
#      # could put more container related params
#      # like "env" for variables needed by image, NOT the steps
    env:
      MONGODB_CONNECTION_PROTOCOL: mongodb
      # if not running the job in a Job Container, need to use a local host IP and port number if needed
      MONGODB_CLUSTER_ADDRESS: 127.0.0.1:27017
      # will run tests in a service container, need to align with the container setup
      MONGODB_USERNAME: root
      MONGODB_PASSWORD: example
      PORT: 8080
    # add service containers to a specific job
    services:
      # assign a label, customizable
      mongodb:
        # must provide an image as services ALWAYS run in an image
        image: mongo
        # depends on the image if needed extra variables
        # if running the job not inside a Job Container,
        # need to specify the host IP address and port number
        # also need to open the port here
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: example
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run server
        run: npm start & npx wait-on http://127.0.0.1:$PORT # requires MongoDB Atlas to accept requests from anywhere!
      - name: Run tests
        run: npm test
      - name: Output information
        run: |
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        env:
          PORT: 3000
        run: |        
          echo "MONGODB_DB_NAME: $MONGODB_DB_NAME"
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"
          echo "${{ env.PORT }}"
